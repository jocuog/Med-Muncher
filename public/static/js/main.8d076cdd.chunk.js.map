{"version":3,"sources":["components/Auth.js","components/Login.js","components/Patients.js","components/MedicationItem.js","components/DoctorItem.js","components/Home.js","components/NavBar.js","components/NewMedication.js","components/AddDoctor.js","components/EditPatient.js","App.js","reportWebVitals.js","index.js"],"names":["Auth","setPatient","useState","name","setName","username","setUsername","password","setPassword","setErrors","displayError","setDisplayError","style","opacity","class","onSubmit","e","preventDefault","patient","points","level","fetch","method","headers","body","JSON","stringify","then","res","ok","json","console","log","errors","borderRadius","backgroundColor","type","placeholder","id","onChange","target","value","className","src","alt","Login","marginTop","Patients","textBubble","avatar","image","navigate","useNavigate","width","margin","marginBottom","onClick","color","window","location","reload","position","left","MedicationItem","medications","setTextBubble","onUpdateScore","onUpdateMeds","onDeleteMeds","dosage","frequency","instructions","initial_amount","fill_date","refill_date","patientPoints","setPatientPoints","patientsLevel","setPatientsLevel","remainingDoses","setRemainingDoses","date","Date","now","delay","data","setData","dateFormat","split","useEffect","s","savedDate","localStorage","getItem","isNaN","currentTime","delta","parseInt","length","removeItem","user","renderer","days","hours","minutes","seconds","completed","bottom","doctor","top","onStart","setItem","phone","email","handleDelete","DoctorItem","doctors","Home","setMedications","setDoctors","r","updatedScore","deletedMeds","updatedMeds","filter","medication","updatedMedications","map","ogmed","medicationsList","NavBar","padding","to","NewMedication","selectedDoctor","patient_id","doctor_id","newMedication","setNewMedication","handleChange","autoComplete","htmlFor","min","step","AddDoctor","newDoctor","setNewDoctor","maxWidth","Accept","EditPatient","onUpdatePatient","patientData","setPatientData","a","App","exact","path","element","updatedPat","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d076cdd.chunk.js","sourcesContent":["\nimport React, { useState } from \"react\";\n\nconst Auth = ({ setPatient }) => {\n    const [name, setName] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const [displayError, setDisplayError] = useState(false);\n\n    function onSubmit(e) {\n        e.preventDefault();\n        const patient = {\n            name,\n            username,\n            password,\n            points: 0,\n            level: 1\n        };\n\n        fetch(\"/signup\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(patient),\n        }).then((res) => {\n            if (res.ok) {\n                res.json().then((patient) => {\n                    setPatient(patient);\n            });\n                } else {\n                    console.log(patient)\n                    res.json().then((json) => setErrors(json.errors));\n                    setDisplayError(true)\n            }\n        });\n    }\n\n    const errorPopup = () => {\n        if (displayError) {\n            return (\n            <>\n                <div class=\"nes-balloon from-left is-dark\">\n                    <p>Please enter valid data in all fields.</p>\n                </div>\n            </>\n            )\n        } else {\n            return (\n                <>\n                    <div class=\"nes-balloon from-left is-dark\">\n                        <p >Create a new Account.</p>\n                    </div>  \n                </>\n            )\n        }\n    }\n\n    return (\n        <div>\n            <div style={{ opacity: '.8'}} class='nes-container is-dark is-rounded with-title'>\n                    <div class='title' >Create account</div>\n                        <div>\n                            <form onSubmit={onSubmit}>\n                            <div class='nes-field'>\n                                <label>Name </label>\n                                \n                                <input\n                                    style={{ borderRadius: '5px', backgroundColor: 'pink' }}\n                                    type=\"text\"\n                                    placeholder=\"Enter Name...\"\n                                    id=\"exampleEmailInput\"\n                                    onChange={(e) => setName(e.target.value)}\n                                />\n                            </div>\n\n                            <br></br>\n\n                            <div class='nes-field'>\n                                <label>Username </label>\n                                \n                                <input\n                                    style={{ borderRadius: '5px', backgroundColor: 'pink' }}\n                                    type=\"text\"\n                                    placeholder=\"Enter username...\"\n                                    id=\"exampleEmailInput\"\n                                    onChange={(e) => setUsername(e.target.value)}\n                                />\n                            </div>\n\n                                <br></br>\n\n                            <div class='nes-field'>\n                                <label>Password </label>\n                                <input\n                                    style={{ borderRadius: '5px', backgroundColor: 'pink' }}\n                                    type=\"password\"\n                                    placeholder=\"Enter password...\"\n                                    id=\"exampleEmailInput\"\n                                    onChange={(e) => setPassword(e.target.value)}\n                                />\n                            </div>\n\n                                    <br></br>\n\n                                <button\n                                    class=\"nes-btn is-primary\"\n                                    type=\"submit\"\n                                    >Sign Up\n                                </button>\n                            </form>\n                            </div>\n                <div>\n                    <div className=\"auth-popup\" >\n                        {errorPopup()}\n                    </div>\n                        <img className='auth-image' src=\"https://pbs.twimg.com/profile_images/1111692640/number_400x400.png\" alt=\"Error muncher\" />\n                </div>\n            </div>\n        </div>\n    );\n    };\n\nexport default Auth;","import React, { useState } from \"react\";\n\nconst Login = ({setPatient}) => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const [displayError, setDisplayError] = useState(false);\n\n    function onSubmit(e) {\n        e.preventDefault();\n        const patient = {\n            username,\n            password,\n        };\n    \n        fetch(\"/login\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(patient),\n        }).then((res) => {\n            if (res.ok) {\n                res.json().then((patient) => {\n                    setPatient(patient);\n                });\n            } else {\n                res.json().then((json) => \n                setErrors(json.errors));\n                setDisplayError(true)\n            }\n        });\n    }\n\n    const errorPopup = () => {\n        if (displayError) {\n            return (\n            <>\n                <div class=\"nes-balloon from-right is-dark\">\n                    <p>Incorrect Login.</p>\n                </div>\n            </>\n            )\n        } else {\n            return (\n                <>\n                    <div class=\"nes-balloon from-right is-dark\">\n                        <p >Sign In to your Account.</p>\n                    </div>  \n                </>\n            )\n        }\n    }\n\n    return (\n        \n        <div style={{ opacity: '.8'}} class='nes-container is-dark is-rounded with-title'>\n        <div class='title'>Patient Login</div>\n        <div className=\"login\" >\n        \n            <div>\n                <form onSubmit={onSubmit}>\n    \n                <div>\n                    <label class='nes-field'>Username</label>\n                    <br></br>\n                    <input\n                        style={{ borderRadius: '5px', backgroundColor: 'pink' }}\n                        type=\"text\"\n                        placeholder=\"Enter new username...\"\n                        id=\"exampleEmailInput\"\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                </div>\n                <br></br>\n                <div>\n                    <label class='nes-field'>Password </label>\n                    <br></br>\n                    <input\n                    style={{ borderRadius: '5px', backgroundColor: 'pink'}}\n                        type=\"password\"\n                        placeholder=\"Enter new password...\"\n                        id=\"exampleEmailInput\"\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </div>\n                <button\n                    style={{ marginTop: '20px'}}\n                    class=\"nes-btn is-primary\"\n                    type=\"submit\"\n                    >Login\n                </button>\n                \n                </form>\n\n            </div>\n                <div>\n                <div className=\"login-popup\" >\n                    {errorPopup()}\n                </div>\n            \n                <img className='login-image' src=\"https://art.ngfiles.com/images/781000/781757_sketching1star_pac-man-looped.gif?f1547186404\" alt=\"Error muncher\" />\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default Login","import { useNavigate } from \"react-router-dom\";\n\nconst Patients = ({patient, textBubble}) => {\n    const { name, username, avatar, image, points, level } = patient\n\n    let navigate = useNavigate();\n\n    const imageBox = () => {\n        if (image === null ) {\n            return (\n                <div>\n                    <p>Hey, if you want an image here,</p>\n                        <button onClick={() => navigate('/edit-patient')} class=\"nes-btn is-warning is-small\" > \n                            Go edit profile\n                        </button>\n                </div>\n            )\n        } else {\n            return (\n                <img src={image} alt={name} />\n            )\n        }\n    }\n\n\n    const textShow = () => {\n        if (textBubble === null && avatar === null) {\n            console.log('hey')\n            return (\n                <div>\n                    <p>Hey {name}!</p>\n                    <p>Set your reminder buddy</p>\n                    <button onClick={() => navigate('/edit-patient')} class=\"nes-btn is-warning is-small\" > \n                    Go edit profile\n                    </button>\n                </div>\n            )\n\n        } if (textBubble === null) {\n            return (\n                <div>\n                    <div class=\"nes-balloon from-right\"> \n                        <p className='bubble-text'>\n                            <i class=\"nes-icon is-small star\"></i>\n                            <i class=\"nes-icon is-small star\"></i>\n                            <i class=\"nes-icon is-small star\"></i>\n                                Hello {name}!\n                            <i class=\"nes-icon is-small star\"></i>\n                            <i class=\"nes-icon is-small star\"></i>\n                            <i class=\"nes-icon is-small star\"></i>\n                        </p>\n                        <p className='bubble-text'>Dont forget to take</p>\n                        <p className='bubble-text'>your medicine.</p>\n                    <i class=\"nes-icon is-medium like\"></i>\n                    <i class=\"nes-icon is-medium like\"></i>\n                    </div>  \n                </div>\n            )\n\n        } else if (textBubble === 1) { \n            return (\n                \n                <div>\n                    <div style={{ color: 'green'}}class=\"nes-balloon from-right\">Good Job {name}!\n                    <br></br>\n                        <button onClick={() => window.location.reload()} class=\"nes-btn is-success is-small\" > \n                            <i class=\"nes-icon coin is-small\"></i>\n                                Restart Timer \n                            <i class=\"nes-icon coin is-small\"></i>\n                        </button>\n                    </div>\n                </div>\n                )\n\n        } else if ( textBubble === 2 ) {\n            return (\n\n            <div>\n                <div class=\"nes-balloon from-right\"> \n                    <p className='bubble-text'>\n                        <i class=\"nes-icon is-small star\"></i>\n                        <i class=\"nes-icon is-small star\"></i>\n                        <i class=\"nes-icon is-small star\"></i>\n                            Hey {name}!\n                        <i class=\"nes-icon is-small star\"></i>\n                        <i class=\"nes-icon is-small star\"></i>\n                        <i class=\"nes-icon is-small star\"></i>\n                    </p>\n                            <p className='bubble-text'>Youre out of Medicine </p>\n                    <button onClick={() => window.location.reload()} class=\"nes-btn is-error is-small\" > \n                        <i class=\"nes-icon close is-small\"/>\n                            OK!\n                        <i class=\"nes-icon close is-small\"/>\n                    </button>\n                </div>  \n            </div>\n        )\n    }   \n}\n\n\n    return (\n\n        <div class=\"nes-container is-rounded is-dark with-title is-centered\"> \n            <h2 class=\"title\">Profile</h2>\n\n            <div className=\"med-doc-container\">\n                <div class=\"nes-table-responsive\">\n                    <table style={{width: '98%', margin: '0 auto', marginBottom: '20px'}} class=\"nes-table is-bordered is-dark\" >\n                        <thead>\n                            <tr>\n                                <th>\n                                    {imageBox()}\n                                </th>\n                                <th>\n                                    <h2 style={{ color: 'yellow' }}>Name:{name}</h2>\n                                        <br></br>\n                                    <h2 style={{ color: 'lime' }}>Username:{username}</h2>\n                                        <br></br>\n                                    <h2 style={{ color: 'magenta' }}>Score:{points}</h2>\n                                        <br></br>\n                                    <h2 style={{ color: 'cyan' }}>Level:{level}</h2>\n                                </th>\n                                <th>\n                                    {textShow()}\n                                    <i style={{ position: 'relative', left: '180px'}} class={`${avatar}`} />   \n                                </th>\n                            </tr>\n                        </thead>\n                    </table>  \n                </div>\n            </div>\n        </div>    \n    )\n}\n\nexport default Patients","import { useState, useEffect } from \"react\";\nimport Countdown from \"react-countdown\";\n\nconst getLocalStorageValue = (s) => localStorage.getItem(s);\n\nconst MedicationItem = ({ medications, patient, setTextBubble, onUpdateScore, onUpdateMeds, onDeleteMeds }) => {\n    const { name, dosage, frequency, instructions, initial_amount, fill_date, refill_date} = medications\n    const { points, level} = patient\n    const [patientPoints, setPatientPoints] = useState(points)\n    const [patientsLevel, setPatientsLevel] = useState(level)\n    const [remainingDoses, setRemainingDoses] = useState(initial_amount)\n\n    const dayMultiplier = (freq) => {\n        return (\n            ((freq)*1000*60*60*24)  \n        )\n    }\n\n    const [data, setData] = useState(\n        { date: Date.now(), delay: (frequency)*10000 } //10 seconds\n    );\n\n        const dateFormat = (date) => {\n            if(date)\n            return (\n                date.split('T')[0]\n        )}\n\n    const renderer = ({ days, hours, minutes, seconds, completed }) => {\n        \n        const handleCompleteCount = () => {\n            if (localStorage.getItem(\"end_date\") != null)\n                        localStorage.removeItem(\"end_date\");\n                            setPatientPoints((patientPoints) => patientPoints + 10)\n        \n                            if (patientPoints%100 === 0) {\n                                setPatientsLevel((patientsLevel) => patientsLevel + 1)\n                            }\n        \n                            if (remainingDoses <= 1)\n                                \n                                setRemainingDoses((remainingDoses) => remainingDoses - dosage)\n                                setTextBubble(2)\n                            if (remainingDoses <= 1) {\n                                fetch(`medications/${medications.id}`, {\n                                    method: \"DELETE\"\n                                })\n                                    onDeleteMeds(medications) \n                    \n                            } else {\n                                setTextBubble(1)\n                                setRemainingDoses((remainingDoses) => remainingDoses - dosage)\n                    }\n                return(\n                    setData({ date: Date.now(), delay: (frequency)*10000 })\n                    )\n            }\n        \n        if (completed) {\n          // Render a complete state\n            return (\n                <> \n                    <button style={{ position: 'relative', bottom: '50px'}}  class=\"nes-balloon from-right\" > \n                        Time To take {dosage} of {name}.\n                        <br></br>\n                        {instructions}\n                        <br></br>\n                        -{medications.doctor.name}\n                        <br></br>\n\n                        <button class=\"nes-btn is-success is-small\" onClick={handleCompleteCount}>\n                            I did it! \n                        </button>\n                        \n                    </button> \n                    <i style={{ position: 'relative', top: '135px'}} class=\"nes-bcrikko\"></i> \n                </>\n            )              \n        } else {\n          // Render a countdown\n            return (\n                <span>\n                    Days{days}:Hours{hours}:Minutes{minutes}:Seconds{seconds}\n                </span>\n            );\n        }\n    };\n\n\n\n    const wantedDelay = 60000; //10 ms\n\n    useEffect(() => {\n\n        const savedDate = getLocalStorageValue(\"end_date\");\n            if (savedDate != null && !isNaN(savedDate)) {\n                const currentTime = Date.now();\n                const delta = parseInt(savedDate, 10) - currentTime;\n          //Do you reach the end?\n            if (delta > wantedDelay) {\n            //Yes we clear our saved end date\n            \n            if (localStorage.getItem(\"end_date\").length > 0)\n                localStorage.removeItem(\"end_date\")\n\n            } else {\n            //No update the end date with the current date\n            setData({ date: currentTime, delay: delta });\n                    \n            }\n        }  \n        \n    },[setData,points] );\n\n    const handleDelete = (medications) => {\n        fetch(`medications/${medications.id}`, {\n            method: \"DELETE\"\n        })\n        onDeleteMeds(medications) \n        console.log(medications)\n    }\n    \nuseEffect(() => {\n\n    fetch(`/patients/${patient.id}`, {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ points: patientPoints, level: patientsLevel}),\n    }).then((res) => {\n        if (res.ok) {\n            res.json().then((user) => {\n                console.log(\"success\", patientPoints, user);\n                onUpdateScore(user)\n            });\n        } else {\n            res.json().then((json) => console.log(\"wrong\"));\n        }\n});                \n}, [patientPoints, patientsLevel, patient.id, ]) \n\nuseEffect(() => {\n\n    fetch(`/medications/${medications.id}`, {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ initial_amount: remainingDoses }),\n    }).then((res) => {\n        if (res.ok) {\n            res.json().then((user) => {\n                console.log(\"success\", remainingDoses, user);\n                onUpdateMeds(user)\n            });\n        } else {\n            res.json().then((json) => console.log(\"wrong\", medications.id));\n        }\n});                 \n}, [remainingDoses, medications.id]);\n\n    return (\n        <>\n        \n        <div class=\"nes-container is-dark is-rounded with-title is-centered\">\n\n            <h2 class=\"title\">{name}</h2>\n\n                <div class=\"nes-container is-rounded is-dark with-title is-centered\">\n                <div class=\"title\">Countdown</div>\n                    <Countdown\n                    date={data.date + data.delay}\n                    renderer={renderer}\n                    onStart={(delta) => {\n                    //Save the end date\n                        if (localStorage.getItem(\"end_date\") == null)\n                            localStorage.setItem(\n                            \"end_date\",\n                            JSON.stringify(data.date + data.delay)\n                            );\n                    }}\n                    />\n                </div>\n            <div className=\"med-doc-container\">\n                <div class=\"nes-container is-rounded is-dark with-title is-centered\">\n                    <div  class='title'>Medication</div>\n                        <div className='medication-container' >\n                        <h3>Medicine:{name}</h3>\n                        <h3>Dosage:{dosage}</h3>\n                        <h3>Frequency(Days):{frequency}</h3>\n                        <h3>Instructions:{instructions}</h3>\n                        <h3>Remaining:{initial_amount}</h3>\n                        <h3>Fill Date:{dateFormat(fill_date)}</h3>\n                        <h3>Refill Date:{dateFormat(refill_date)}</h3>\n                        </div>\n                    </div>\n                        {/* <div >\n                            <img src=\"\" alt=\"pills\" />\n                        </div> */}\n                    <div class=\"nes-container is-rounded is-dark with-title is-centered\">\n                        <div class='title'>Doctor</div>\n                        <div className=\"doctor-container\">\n                            <i class=\"nes-icon is-small heart\"></i>\n                            <i class=\"nes-icon is-small heart\"></i>\n                            <i class=\"nes-icon is-small heart\"></i>\n                            <i class=\"nes-icon is-small heart\"></i>\n                            <i class=\"nes-icon is-small heart\"></i>\n                            <br></br>\n                                <h3>Name:{medications.doctor.name}</h3>\n                                    <br></br>\n                                <h3>Location:{medications.doctor.location}</h3>\n                                    <br></br>\n                                <h3>Phone:{medications.doctor.phone}</h3>\n                                    <br></br>\n                                <h3>Email:{medications.doctor.email}</h3>\n                                    <br></br>\n                        </div>\n                        </div>    \n                    </div>\n                        <button className=\"remove-button\" onClick={() => handleDelete(medications)}>Remove Medicine</button>\n            </div>\n        </>\n    )\n}\n\nexport default MedicationItem","\nconst DoctorItem = ({ doctors }) => {\n    const { name, location, phone, email } =  doctors\n\n    return (\n        <div>\n            <h3>Doc Name:{name}</h3>\n            <h3>Doc Loc:{location}</h3>\n            <h3>Doc Phone:{phone}</h3>\n            <h3>Doc Email:{email}</h3>\n        </div>\n    )\n}\n\nexport default DoctorItem","import React , { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Patients from './Patients'\nimport MedicationItem from \"./MedicationItem\";\nimport DoctorItem from \"./DoctorItem\";\n\nconst Home = ({ setPatient, patient }) => {\n    const [medications, setMedications] = useState([]);\n    const [doctors, setDoctors] = useState([]);\n    const [textBubble, setTextBubble] = useState(null);\n\n    useEffect(() => {\n        fetch(\"/my_medications\").then((r) => {\n            if (r.ok) {\n                r.json().then((medications) => setMedications(medications));\n            }\n        });\n    }, []);\n\n    useEffect(() => {\n        fetch(\"/my_doctors\").then((r) => {\n            if (r.ok) {\n                r.json().then((doctors) => setDoctors(doctors));\n            }\n        });\n    }, []);\n\n    let navigate = useNavigate();\n\n    const logout = () => {\n        fetch(\"/logout\", {\n            method: \"DELETE\",\n        }).then(() => {\n            setPatient(null);\n        });\n            navigate(\"/\");\n    };\n\n    const onUpdateScore = (updatedScore) => {\n        setPatient(updatedScore)\n    }\n\n    const onDeleteMeds = (deletedMeds) => {\n        const updatedMeds = medications.filter(medication => medication.id !== deletedMeds.id)\n        setMedications(updatedMeds)\n        console.log('delete', deletedMeds);\n    }\n\n    const onUpdateMeds = (updatedMeds) => {\n        const updatedMedications = medications.map(ogmed => {\n            if(ogmed.id === updatedMeds.id){\n                return updatedMeds\n            } else {\n                return ogmed\n            }\n        })\n        setMedications(updatedMedications)\n    }\n\n    const medicationsList = medications.map((medications) => (\n        <MedicationItem \n            key={medications.id} \n            medications={medications} \n            setMedications={setMedications} \n            patient={patient} \n            setTextBubble={setTextBubble} \n            onUpdateScore={onUpdateScore} \n            onUpdateMeds={onUpdateMeds} \n            onDeleteMeds={onDeleteMeds} />\n    ));\n\n    const doctorsList = doctors.map((doctors) => (\n        <DoctorItem \n            key={doctors.id} \n            doctors={doctors} \n            setDoctors={setDoctors} />\n    ));\n\n    return (\n        <div >\n                <Patients \n                    patient={patient}\n                    setPatient={setPatient} \n                    textBubble={textBubble} \n                    setTextBubble={setTextBubble}/>\n\n            <div class=\"nes-container is-dark with-title is-centered\">\n                <h2 class=\"title\">Medications</h2>\n                <br></br>\n                {medicationsList}\n            </div>\n        </div>\n    )\n}\n\nexport default Home;","import { Link, useNavigate } from \"react-router-dom\";\n\nconst NavBar = ({ setPatient }) => {\n\n    let navigate = useNavigate();\n\n    const logout = () => {\n        fetch(\"/logout\", {\n            method: \"DELETE\",\n        }).then(() => {\n            setPatient(null);\n        });\n            navigate(\"/\");\n    };\n\n    return (\n        <div  className='navbar' >\n            <div class=\"nes-container is-rounded with-title\">\n                <div class='title'>Navigation</div>\n\n                    <Link class=\"nes-container is-rounded is-dark\" style={{ padding: 15 }} to=\"/\">|HOME|\n                    </Link>\n\n                    <Link class=\"nes-container is-rounded is-dark\" style={{ padding: 15 }} to=\"/new_medication\">|ADD NEW MEDICATION|\n                    </Link>\n\n                    <Link class=\"nes-container is-rounded is-dark\" style={{ padding: 15 }} to=\"/add_Doctor\">|ADD DOCTOR|\n                    </Link>\n            \n                    <Link class=\"nes-container is-rounded is-dark\" style={{ padding: 15 }} to=\"/edit-patient\">|EDIT PROFILE|\n                    </Link>\n\n                <button  style={{ margin: 15 }} class=\"nes-btn is-primary\" type=\"button\" onClick={logout}>LOGOUT</button>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default NavBar;","import { useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from 'react'\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst NewMedication = ({ patient })=> {\n    const [selectedDoctor, setSelectedDoctor] = useState(\"\")\n    const [doctors, setDoctors] = useState([]);\n    const [ newMedication, setNewMedication ] = useState({\n        patient_id: patient.id,\n        doctor_id: selectedDoctor,\n        name: \"\",\n        dosage: 0,\n        frequency: 0,\n        instructions: \"\",\n        initial_amount: 0,\n        fill_date: 0,\n        refill_date: 0\n\n    })\n\n    const handleChange = (e) => {\n        const { name,  value} = e.target\n        setNewMedication((newMedication) => ({...newMedication, [name]: value}))\n    }\n\n    let navigate = useNavigate();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        \n        fetch(\"/medications\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(newMedication),\n        }).then((res) => {\n            if (res.ok) {\n                res.json().then((user) => {\n                console.log(\"success\");\n                navigate('/')\n                });\n            } else {\n                res.json().then((json) => console.log(\"wrong\", newMedication, doctors));\n            }\n        });\n    };\n\n    useEffect(() => {\n        fetch(\"/doctors\").then((r) => {\n            if (r.ok) {\n                r.json().then((doctors) => setDoctors(doctors));\n            }\n        });\n    }, []);\n\n    \n    return (\n    <div className='new-medication'>\n\n    <section>                    \n\n    <form className=\"form\" autoComplete=\"off\" onSubmit={handleSubmit}>\n\n        <div class=\"nes-container is-success is-rounded is centered\" >\n\n            <h2 class=\"title\">NEW MEDICATION</h2>\n\n            <div className='new-med-container' >\n\n                <div className='new-med-sub-container'>\n        \n                        <div className='med-form'>\n                            <div>\n            \n                                <label className=\"form-text\" htmlFor=\"name\" >Name</label>\n                                <br></br>\n                                    <input\n                                        placeholder=\"ENTER NAME...\"\n                                        class=\"nes-input is-success\"\n                                        type=\"text\"\n                                        id=\"name\"\n                                        name=\"name\"\n                                        onChange={handleChange}\n                                        value={newMedication.name} />\n                                </div>\n\n                                <div>\n                                <label className=\"form-text\" htmlFor=\"instructions\" >Instructions</label>\n                                <br></br>\n                                    <input\n                                        placeholder=\"INSTRUCTIONS...\"\n                                        class=\"nes-input is-success\"\n                                        type=\"text\"\n                                        id=\"instructions\"\n                                        name=\"instructions\"\n                                        onChange={handleChange}\n                                        value={newMedication.instructions} />\n                                </div>    \n\n                                <div>\n                                <label className=\"form-text\" htmlFor=\"dosage\" >Dosage</label>\n                                <br></br>\n                                    <input\n                                        class=\"nes-input is-success\"\n                                        type=\"number\"\n                                        min='0'\n                                        step=\"1\"\n                                        id=\"dosage\"\n                                        name=\"dosage\"\n                                        onChange={handleChange}\n                                        value={newMedication.dosage} />\n                                </div>    \n                        \n                                <div>\n                                <label className=\"form-text\" htmlFor=\"frequency\" >Frequency(Days)</label>\n                                <br></br>\n                                    <input\n                                        class=\"nes-input is-success\"\n                                        type=\"number\"\n                                        min='0'\n                                        step=\"1\"\n                                        id=\"frequency\"\n                                        name=\"frequency\"\n                                        onChange={handleChange}\n                                        value={newMedication.frequency} />\n                                </div>    \n    \n                                <div>\n                                <label className=\"form-text\" htmlFor=\"initial_amount\" >Starting Quantity</label>\n                                <br></br>\n                                    <input\n                                        class=\"nes-input is-success\"\n                                        type=\"number\"\n                                        min='0'\n                                        id=\"initial_amount\"\n                                        name=\"initial_amount\"\n                                        onChange={handleChange}\n                                        value={newMedication.initial_amount} />\n                                </div>\n\n                            </div>\n\n                </div>\n\n            </div>\n\n        </div>\n\n\n            <div className=\"med-form2\" >\n                <div >\n                    <label  htmlFor=\"doctor_id\" >Doctor</label>\n                    <br></br>\n                    <select\n                        class=\"nes-input is-warning\"\n                        name=\"doctor_id\"\n                        id=\"doctor_id\"\n                        onChange={handleChange}\n                        value={newMedication.doctor_id} >\n                        <option value=\"Select Doctor\" >Select Doctor</option>\n                        {doctors.map((doctor) => {return <option key={doctor.id} value={doctor.id} >{doctor.name}</option>})}\n                    </select>\n                </div>\n                    <br></br>\n                <div>\n                    <label htmlFor=\"fill_date\" >Fill Date</label>\n                        <br></br>\n                        <input\n                            class=\"nes-input is-warning\"\n                            type=\"date\"\n                            id=\"fill_date\"\n                            name=\"fill_date\"\n                            onChange={handleChange}\n                            value={newMedication.fill_date} />\n                </div>    \n                    <br></br>\n                <div>\n                    <label htmlFor=\"refill_date\" >Refill Date</label>\n                        <br></br>\n                        <input\n                            class=\"nes-input is-warning\"\n                            type=\"date\"\n                            id=\"refill_date\"\n                            name=\"refill_date\"\n                            onChange={handleChange}\n                            value={newMedication.refill_date} />\n                </div>\n\n                <br></br>\n\n                </div>\n\n                <button className=\"submit-button\" type=\"submit\" >ADD <br></br><h1>?</h1>MEDICATION</button>\n\n            </form>\n        </section>\n    </div>\n    )\n\n}\n\nexport default NewMedication","    import { useNavigate} from \"react-router-dom\";\n    import { useState } from 'react'\n\nconst AddDoctor = ({patient}) => {\n    console.log(patient)\n\n        const [ newDoctor, setNewDoctor ] = useState({\n            // patient_id: patient.id,\n            name: \"\",\n            location: \"\",\n            phone: \"\",\n            email: \"\"\n        })\n    \n        const handleChange = (e) => {\n            const { name,  value} = e.target\n            setNewDoctor((newDoctor) => ({...newDoctor, [name]: value}))\n        }\n        \n        let navigate = useNavigate();\n\n    \n        const handleSubmit = (e) => {\n            e.preventDefault();\n            \n            fetch(\"/doctors\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\",\n                Accept: \"application/json\" },\n                body: JSON.stringify(newDoctor),\n            }).then((res) => {\n                if (res.ok) {\n                    res.json().then((user) => {\n                    console.log(\"success\");\n                    navigate('/')\n                    });\n                } else {\n                    res.json().then((json) => console.log(\"wrong\",newDoctor));\n                    \n                }\n            });\n        };\n\n        \n        return (\n            <div className=\"add-doctor\"  >\n            <div style={{position: 'relative'}}>\n            <div style={{  maxWidth: '30%', color: 'white', opacity: 0.8,position: 'absolute', top: '150px', left: '50%' }} class=\"nes-container is-rounded is-dark with-title\">\n            <h2 class=\"title\">Add Doctor</h2>\n                <section>\n                    <div>\n                    <form>\n                    <div>\n                    <label htmlFor=\"name\" >Name</label>\n                    <br></br>\n                        <input\n                        class='nes-input is-dark is-success'\n                            type=\"text\"\n                            id=\"name\"\n                            name=\"name\"\n                            onChange={handleChange}\n                            value={newDoctor.name} />\n                        </div>\n\n                        <div>\n                        <label htmlFor=\"location\" >Location</label>\n                        <br></br>\n                        <input\n                        class='nes-input is-dark is-success'\n                            type=\"text\"\n                            id=\"location\"\n                            name=\"location\"\n                            onChange={handleChange}\n                            value={newDoctor.location} />\n                        </div>\n\n                        <div>\n                        <label htmlFor=\"phone\" >Phone</label>\n                        <br></br>\n                        <input\n                        class='nes-input is-dark is-success'\n                            type=\"text\"\n                            id=\"phone\"\n                            name=\"phone\"\n                            onChange={handleChange}\n                            value={newDoctor.phone} />\n                        </div>\n\n                        <div>\n                        <label htmlFor=\"email\" >Email</label>\n                        <br></br>\n                        <input\n                        class='nes-input is-dark is-success'\n                            type=\"text\"\n                            id=\"email\"\n                            name=\"email\"\n                            onChange={handleChange}\n                            value={newDoctor.email} />\n                        </div>\n                        <br></br>\n                        <button style={{}} onClick={handleSubmit} class=\"nes-btn is-success\" type=\"submit\" >Add Doctor</button>\n                    </form>\n                    </div>\n                </section>\n                </div>\n                </div>\n            </div>\n        )\n}\n\nexport default AddDoctor","import { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Patients from \"./Patients\";\n\nconst EditPatient = ({patient, onUpdatePatient}) => {\n    const { username, avatar, image, name } = patient\n    const [patientData, setPatientData] = useState({\n        username,\n        avatar,\n        image\n    })\n    \n    const handleChange = (e) => {\n        const { name,  value} = e.target\n        setPatientData((patientData) => ({...patientData, [name]: value}))\n    }\n\n    let navigate = useNavigate();\n\n    useEffect(() => {\n        fetch(`/patients/${patient.id}`).then((r) => {\n            if (r.ok) {\n            r.json().then((a) => setPatientData(a));\n            }\n        });\n    }, [patient.id,setPatientData]);\n        \n    const handleSubmit = (e) => {\n        e.preventDefault();   \n    fetch(`/patients/${patient.id}`, {\n        method: \"PATCH\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(patientData),\n        }).then((res) => {\n            if (res.ok) {\n                res.json().then((user) => {\n                    console.log(\"success\",user);\n                    onUpdatePatient(user)\n                    navigate('/')\n                });\n            } else {\n                res.json().then((json) => console.log(\"wrong\"));\n            }\n        });\n    };\n\n    return (\n        <div className=\"edit-profile-container\">\n            <div>\n                    <Patients patient={patient}/>\n                <div style={{ opacity: '.9'}} class=\"nes-container is-dark is-rounded with-title is-centered\" >\n                    <h2 class=\"title\">Edit Profile</h2>\n\n                    <section>\n                        <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                            <div class=\"nes-table-responsive\">\n                                <table style={{width: '98%', margin: '0 auto', marginBottom: '20px'}} class=\"nes-table is-bordered is-dark\" >\n                                    <thead>\n                                        <tr>\n                                            <th>\n                                                <img src={image} alt={name} />\n                                            </th>\n                                            <th>\n                                                <div>\n                                                    <label htmlFor=\"username\" class='nes-field'> Change Username</label>\n                                                        <br></br>\n                                                    <input\n                                                        class=\"nes-input is-warning\"\n                                                        style={{ borderRadius: '5px', backgroundColor: 'pink' }}\n                                                        type=\"text\"\n                                                        id=\"username\"\n                                                        name=\"username\"\n                                                        onChange={handleChange}\n                                                        value={patientData.username} />\n                                                </div>\n                                                        <br></br>\n                                                    <label htmlFor=\"image\" class='nes-field'> Enter an Image</label>\n                                                            <br></br>\n                                                        <div>\n                                                            <input\n                                                                class=\"nes-input is-warning\"\n                                                                style={{ borderRadius: '5px', backgroundColor: 'pink' }}\n                                                                type=\"text\"\n                                                                id=\"image\"\n                                                                name=\"image\"\n                                                                onChange={handleChange}\n                                                                value={patientData.image} />       \n                                                        </div>         \n                                                </th>\n                                                <th>\n                                                    <div>\n                                                        <label htmlFor=\"avatar\" class='nes-field'>Pick Your Buddy</label>    \n                                                    </div>\n                                                        <i class={`${patientData.avatar}`} />\n                                                    <div class=\"nes-select is-error\">\n                                                        <br></br>\n\n                                                        <select\n                                                            style={{ borderRadius: '5px', backgroundColor: 'pink' }}\n                                                            type=\"text\"\n                                                            id=\"avatar\"\n                                                            name=\"avatar\"\n                                                            onChange={handleChange}\n                                                            value={patientData.avatar}>\n                                                                <option value='nes-mario'>Mario</option>\n                                                                <option value='nes-ash'>Ash Ketchum</option>\n                                                                <option value='nes-pokeball'>Pokeball</option>\n                                                                <option value='nes-bulbasaur'>Bulbasaur</option>\n                                                                <option value='nes-charmander'>Charmander</option>\n                                                                <option value='nes-squirtle'>Squirtle</option>\n                                                                <option value='nes-kirby'>Kirby</option>\n                                                                <option value='nes-octocat animate'>Octocat</option>\n                                                        </select>\n                                                    </div>\n\n                                                </th>\n                                                            \n                                            </tr>  \n                                    </thead>     \n                                </table> \n                                    <button class=\"nes-btn is-error\" type=\"submit\" >SUBMIT</button>\n                            </div>\n                        </form>\n                    </section>\n                </div> \n            </div>\n        </div>\n    )\n}\n\nexport default EditPatient","\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Auth from \"./components/Auth\"\nimport Login from \"./components/Login\"\nimport Home from \"./components/Home\"\nimport DoctorItem from './components/DoctorItem'\nimport MedicationItem from './components/MedicationItem'\nimport NavBar from \"./components/NavBar\"\nimport NewMedication from './components/NewMedication';\nimport AddDoctor from './components/AddDoctor'\nimport EditPatient from './components/EditPatient';\n\nfunction App() {\n  const [patient, setPatient] = useState(null)\n  const [medications, setMedications] = useState([]);\n  const [doctors, setDoctors] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((patient) => setPatient(patient));\n      }\n    });\n}, []);\n\nuseEffect(() => {\n  fetch(\"/my_medications\").then((r) => {\n      if (r.ok) {\n          r.json().then((medications) => setMedications(medications));\n      }\n  });\n}, []);\n\nuseEffect(() => {\n  fetch(\"/my_doctors\").then((r) => {\n      if (r.ok) {\n          r.json().then((doctors) => setDoctors(doctors));\n      }\n  });\n}, []);\n\nconst onUpdatePatient = (updatedPat) => {\n  setPatient(updatedPat)\n}\n\nif (!patient) {\n  return (\n    <div className='main-container'>\n    \n    <h1 className=\"mainhead\">Med Muncher</h1>\n    \n    <Login\n      error={\"please login\"}\n      setPatient={setPatient}\n    />\n    <br></br>\n    <Auth setPatient={setPatient} />\n    </div>\n  );\n}\n\n\nreturn (\n  <div className='main-container'>\n    <NavBar\n      setPatient={setPatient}\n      patient={patient}\n    />\n    <Routes>\n      <Route\n        exact\n        path=\"/\"\n        element={<Home setPatient={setPatient} patient={patient} medications={medications} setMedications={setMedications} doctors={doctors} setDoctors={setDoctors}/>}\n      />\n      <Route\n        path='/doctors/:id'\n        element={<DoctorItem />}\n      /> \n      <Route\n        path='/new_medication'\n        element={<NewMedication patient={patient} doctors={doctors} setDoctors={setDoctors}/>}\n      /> \n      <Route\n        path='/add_doctor'\n        element={<AddDoctor patient={patient} />}\n      /> \n      <Route\n        path='/edit-patient'\n        element={<EditPatient patient={patient} onUpdatePatient={onUpdatePatient} />}\n      /> \n      <Route \n        path=\"medications/:id\" \n        element={<MedicationItem />} />\n    </Routes>  \n  </div>\n);\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}